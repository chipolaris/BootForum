<!DOCTYPE html>
<ui:composition  xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:fn="http://java.sun.com/jsp/jstl/functions"
      xmlns:sec="http://www.springframework.org/security/tags"
      template="/WEB-INF/template/layout_anonymous.xhtml">

	<ui:define name="title">
		#{msg['register']}
	</ui:define>
	
	<ui:define name="content">
	
		<style type="text/css">
			/* 
				a small work around to get Primeface password component to display full width 
				as &lt;p:password..&gt; is a wrapped element and style class 'w-full' will not be applied 
				to the underlying element
			*/
			span.ui-password {
				width: 100%;
			}
		</style>

	    <div class="surface-card p-4 shadow-2 border-round w-full lg:w-6" style="max-width:45em;">
	        <div class="text-center mb-5">
	            <h:link outcome="index">
	        		<p:graphicImage name="logo.png" library="images" alt="Logo"
                           height="50" styleClass="mb-3"/>
	            </h:link>
                           
	            <div class="text-900 text-3xl font-medium mb-3">#{msg['register.account']}</div>
	            <span class="text-600 font-medium line-height-3">#{msg['already.have.account']}</span>
	            <h:link outcome="login" styleClass="font-medium no-underline ml-2 text-blue-500 text-right cursor-pointer">
	               	#{msg['login']}
		        </h:link>
	        </div>
	
	        <div>
	            
	            <h:form prependId="false" id="registerForm">

			        <p:messages id="messages" showDetail="true" closable="true" for="registerForm">
			            <p:autoUpdate/>
			        </p:messages>

		            <p:outputLabel for="username" styleClass="block text-900 font-medium mb-2"><i class="pi pi-user"/> #{msg['username']}</p:outputLabel>
					<p:inputText id="username" value="#{register.user.username}" placeholder="#{msg['pick.a.username']}" 
						styleClass="w-full mb-3" title="#{msg['username']}" validatorMessage="#{msg['username.must.be']}">
						<!-- username must be alphanumeric between 5 to 30 characters -->
						<f:validateRegex pattern="^[a-zA-Z0-9]{5,30}$"/>
					</p:inputText>
					<p:message for="username" id="usernameMessage"/>
		
		            <p:outputLabel for="email" styleClass="block text-900 font-medium mb-2"><i class="pi pi-envelope"/> #{msg['email']}</p:outputLabel>
		            <p:inputText id="email" value="#{register.user.person.email}" placeholder="#{msg['enter.email']}" 
		            	styleClass="w-full mb-3" title="#{msg['email']}" validatorMessage="#{msg['invalid.email.format']}">
		            	<!-- use OWASP email regex from https://www.baeldung.com/java-email-validation-regex
		            		"^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"
		            		note: minor changes for use in JSF facelet
		            			escape '&' with '&amp;' 
		            			change "\\." to "\." -->
		            	<f:validateRegex pattern="^[a-zA-Z0-9_+&amp;*-]+(?:\.[a-zA-Z0-9_+&amp;*-]+)*@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,7}$"/>
					</p:inputText>
					<p:message for="email" id="emailMessage"/>
					
					<p:outputLabel for="password" styleClass="block text-900 font-medium mb-2"><i class="pi pi-key"/> #{msg['password']}</p:outputLabel>
					<p:password id="password" value="#{register.user.password}" placeholder="#{msg['choose.a.password']}"
						styleClass="w-full" title="#{msg['password']}"
						toggleMask="true" validatorMessage="#{msg['password.must.be']}">
						<f:validateLength minimum="5" maximum="16"/>
					</p:password>
					<p/>
					<p:message for="password" id="passwordMessage"/>
						
					<p:outputLabel for="confirmPassword" styleClass="block text-900 font-medium mb-2"><i class="pi pi-check"/> #{msg['confirm.password']}</p:outputLabel>
					<p:password type="password" id="confirmPassword" placeholder="#{msg['confirm.password']}" validator="#{register.validateConfirmPassword}"
						styleClass="w-full" title="#{msg['confirm.password']}" toggleMask="true" value="#{register.user.password}">
					</p:password>
					<p/>
					<p:message for="confirmPassword" id="confirmPasswordMessage"/>

					<div class="field">
						
						<p:outputLabel for="captchaInput" styleClass="block text-900 font-medium mb-2"><i class="pi pi-verified"/> #{msg['enter.captcha']}</p:outputLabel>
						
						<div class="grid">
						
							<div class="col-12 md:col-6 lg:col-6">
								<p:inputText id="captchaInput" title="#{msg['captcha']}" styleClass="w-full">
									<f:validator validatorId="captchaValidator"/>
								</p:inputText>
							</div>
							<!-- note: use style="display: flex; align-items: center;"
								to force the captcha image and the refresh button vertically aligned
								ref: https://stackoverflow.com/questions/489340/vertically-align-text-next-to-an-image
							 -->
							<div class="col-2 md:col-6 lg:col-6" style="display: flex; align-items: center;">
								
								<h:graphicImage value="data:image/png;base64,#{captchaImage.randomCaptchaBase64}" id="captchaImage" 
									style="border-radius:4px;"/>
									
								<!-- 
									note: it's important to have process="@this" and partialSubmit="true", meaning only process this component (button).
									this would avoid the whole form submit (and the form input validation on the server side):
									
									https://stackoverflow.com/questions/25339056/understanding-primefaces-process-update-and-jsf-fajax-execute-render-attributes
								-->
					  			<p:commandButton update="registerForm:captchaImage" process="@this" partialSubmit="true"
					  				icon="pi pi-refresh" ajax="true" style="margin-left:5px;" title="#{msg['refresh.captcha']}" value="Refresh"/>
				  				
				  			</div>
			  			
			  			</div>
			  			
			  			<p:message for="captchaInput" id="captchaInputMessage"/>
					</div>
					
		           <p:commandButton ajax="true" styleClass="w-full" value="#{msg['submit']}" icon="pi pi-user-plus"
							id="submitButton" action="#{register.register}" update=":registerForm"/>
	            
	            </h:form>

	        </div>
	    </div>

		
	</ui:define>

</ui:composition>